<style>
.loader {
  border: 16px solid #f3f3f3; /* Light grey */
  border-top: 16px solid #3498db; /* Blue */
  border-radius: 50%;
  width: 120px;
  height: 120px;
  animation: spin 2s linear infinite;
  position: absolute;
  left: 50%;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.image {
  width: 100%;
  height: 100%;
  display: block;
  margin-left: auto;
  margin-right: auto;
}
</style>

<div id="content"></div>

<script type="text/babel">


  var NewPostComponent = React.createClass({

    getInitialState: function() {
      return {
      loading: true,
      title: '',
      description: '',
      loader: false
      }
    },

  componentDidMount: function() {
    var that = this;
    firebase.auth().onAuthStateChanged((user) => {
      if (!user) {
        document.location.href="/login"
      } else {
        that.setState({loading: false});
        console.log("I am connected to Firebase!: "+user.email);
      }
    })
  },

  base64: function(file, callback){
    var coolFile = {};
    function readerOnload(e){
      var base64 = btoa(e.target.result);
      coolFile.base64 = base64;
      callback(coolFile)
    };

    var reader = new FileReader();
    reader.onload = readerOnload;

    var file = file[0].files[0];
    coolFile.filetype = file.type;
    coolFile.size = file.size;
    coolFile.filename = file.name;
    reader.readAsBinaryString(file);
  },

  redirectionPost: function() {
    document.location.href="/post"
  },

  onSubmit: function(e) {
    e.preventDefault()
    this.setState({loader: true});
    var that = this;
    var title = this.state.title;
    var description = this.state.description;
    console.log('title: '+title+' description: '+description);
    var date = moment().format("DD-MM-YYYY");
    var timestamp = moment().unix();
    var timestampInverse = Number.MAX_SAFE_INTEGER - timestamp;
    var image = $('input[type="file"]');
    var base64 = "";
    var imagePresents = false;
    var fileSelected = document.getElementById("picture").files;
    if (fileSelected.length > 0) {
      console.log("je commence Ã  uploader mon image");
      var storage = firebase.storage();
      var storageRef = storage.ref();
      var imagesRef = storageRef.child('posts');
      imagePresents = true;
      this.base64( image, function(data){
        base64 = data.base64;
        console.log("base64 OK");
          var file = image[0].files[0];
          var uploadTask = storageRef.child('posts/' + file.name).put(file);
                  // Register three observers:
                  // 1. 'state_changed' observer, called any time the state changes
                  // 2. Error observer, called on failure
                  // 3. Completion observer, called on successful completion
                  uploadTask.on('state_changed', function(snapshot){
                  // Observe state change events such as progress, pause, and resume
                  // See below for more detail
                  }, function(error) {
                  // Handle unsuccessful uploads
                  }, function() {
                  // Handle successful uploads on complete
                  // For instance, get the download URL: https://firebasestorage.googleapis.com/...
                  var downloadURL = uploadTask.snapshot.downloadURL;
                  console.log("URL OK: "+downloadURL);
                  var postData = {
                    author: "Amicale",
              			title: title,
              			description: description,
              			date: date,
              			imagePresents: imagePresents,
              			imageData: base64,
                    imageURL: downloadURL,
              			timestamp: timestamp,
              			timestampInverse: timestampInverse
                  };
                  var fd = new FormData();
                  fd.append('title', title);
                  var newPostKey = firebase.database().ref().child('posts').push().key;
                  var updates = {};
                  updates['/posts/' + newPostKey] = postData;
                  firebase.database().ref().update(updates).then(function() {
                    console.log("Upload to firebase OK");
                    $.ajax({
                      url: '/notification/new_react',
                      type: 'POST',
                      data: fd,
                      dataType: 'json',
                      cache: false,
                      processData: false,
                      contentType: false,
                      success: function(data) {
                            //alert("Success ajax notification/new: "+data);
                            console.log("Success to send notification");
                            that.redirectionPost();
                          }.bind(this),
                          error: function(xhr, status, err) {
                            alert("Error ajax post notification/new: "+err);
                          }.bind(this)
                        });
                  });
                  //that.redirectionPost();
              });

        });
    } else {
      var postData = {
        author: "Amicale",
  			title: title,
  			description: description,
  			date: date,
  			imagePresents: false,
  			imageData: base64,
        imageURL: "",
  			timestamp: timestamp,
  			timestampInverse: timestampInverse
      };
      var fd = new FormData();
      fd.append('title', title);
      var newPostKey = firebase.database().ref().child('posts').push().key;
      var updates = {};
      updates['/posts/' + newPostKey] = postData;
      firebase.database().ref().update(updates).then(function() {
        $.ajax({
          url: '/notification/new_react',
          type: 'POST',
          data: fd,
          dataType: 'json',
          cache: false,
          processData: false,
          contentType: false,
          success: function(data) {
                //alert("Success ajax notification/new: "+data);
                console.log("Success to send notification");
                that.redirectionPost();
              }.bind(this),
              error: function(xhr, status, err) {
                alert("Error ajax post notification/new: "+err);
              }.bind(this)
            });
      });
    }
  },

  setLoader: function() {
    if (this.state.loader) {
      return (<div className="loader"></div>);
    } else {
      return ("");
    }
  },

  render: function() {
    var that = this;
    if (!this.state.loading) {
    var form = (
      <div className="container">
      <form className="form-signin" onSubmit={this.onSubmit}>
        <h2 className="form-signin-heading">New post</h2>
        <label className="sr-only">Title</label>
        <input className="form-control" type='text'
          onChange={(e) => this.setState({title: e.target.value})}
          placeholder='title'
          required
        />
        <label className="sr-only">Description</label>
        <textarea onChange={(e) => this.setState({description: e.target.value})} cols="40" rows="5" name="description" className="form-control" placeholder="Description" required></textarea>
        <br/>
        <br/>
        <input type="file" name="picture" id="picture"></input>
        <br/>
        <br/>
        <button className="btn btn-lg btn-primary btn-block" type="submit">Send</button>
      </form>
      </div>
    );
  } else {
    var form = "[NEW POST] Loading... (Checking for authentication right)"
  }

    return (
      <div>
      {this.setLoader()}
      {form}
      </div>
    );
  }
});



ReactDOM.render(
  <NewPostComponent/>,
  document.getElementById('content')
);
</script>
